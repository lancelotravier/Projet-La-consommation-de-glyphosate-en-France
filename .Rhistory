setwd("~/Documents/GitHub/glyphosate")
knitr::opts_chunk$set(echo = TRUE, fig.width=3, fig.height=2.5,fig.pos ="ht", out.width = '50%',out.extra = "",fig.align = 'center')
getOption('xtable.comment',TRUE)
knitr::opts_chunk$set(echo = FALSE) # By default, hide code; set to TRUE to see code
knitr::opts_chunk$set(fig.pos = 'p') # Places figures on their own pages
knitr::opts_chunk$set(out.width = '100%', dpi=300) # Figure resolution and size
knitr::opts_chunk$set(fig.env="figure") # Latex figure environment
setwd("~/Documents/GitHub/glyphosate")
glyphosate <- read.csv2("data/glyphosate.csv")
vignes <- read.csv2("data/vignes.csv")
cereales <- read.csv2("data/cereales.csv")
pbs <- read.csv2("data/pbs.csv")
sau <- read.csv2("data/sau.csv")
data <- inner_join(glyphosate, vignes, by = "code_departement")
library("lubridate")
library("magrittr")
library("ggplot2")
library("ggpubr")
library("rticles")
library("hrbrthemes")
library("forcats")
library("ggridges")
library("cowplot")
library("ggthemes")
library("fmsb")
library("wesanderson")
library("knitr", "rmarkdown", "markdown")
library("tidyverse")
library("tidyr")
library("dplyr")
library("plotly")
library("paletteer")
library("extrafont")
library("kableExtra")
library('data.table')
library("readxl")
library("jtools")
library("ggrepel")
library("fastDummies")
library("xtable")
library("sjPlot")
library("sjmisc")
library("sjlabelled")
library("lmtest")
library("modelsummary")
library("kableExtra")
library("gt")
library("corrplot")
library("mice")
library("sandwich")
library("psych")
library("performance")
library("see")
library("patchwork")
library("stargazer")
library("car")
library("nlme")
tz <- Sys.timezone()
data <- inner_join(glyphosate, vignes, by = "code_departement")
data <- inner_join(data, cereales, by = "code_departement")
data <- inner_join(data, pbs, by = "code_departement")
data <- inner_join(data, sau, by = "code_departement")
datasummary_skim(data)
data <- mutate_all(data, ~ replace(., is.na(.), 0))
data <- data %>%
mutate(log_pbs = log(pbs)) %>%
mutate(log_sau = log(sau)) %>%
mutate(log_glyphosate = log(glyphosate))
data <- data[, !names(data) %in% c("annee")]
describe(data)
data_numeric <- data[sapply(data, is.numeric)]
mcor <- cor(data_numeric, use = "complete.obs")
corrplot(mcor, method = "number", type = "upper", order = "hclust",
tl.col = "black")
ggplot(data) +
aes(x = pbs, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = sau, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = cereales, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = vignes, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
mco1 <- lm(log_glyphosate ~ log_pbs + log_sau + cereales + vignes, data = data)
modelsummary(mco1,
estimate = c("{estimate} ({std.error}) {stars}"),
statistic = 'conf.int', conf_level = 0.95)
res1 <- residuals(mco1)
t.test(res1)
res1 <- residuals(mco1)
qqnorm(res1)
qqline(res1, col = 'red')
plot(fitted(mco1), resid(mco1),
xlab = "Valeurs ajustées", ylab = "Résidus",
main = "Résidus vs. Valeurs ajustées")
check_heteroskedasticity(mco1)
data <- data %>%
mutate(sq_log_pbs = log(pbs)^2) %>%
mutate(sq_log_sau = log(sau)^2) %>%
mutate(sq_cereales = cereales^2) %>%
mutate(sq_vignes = vignes^2)
resettest(mco1, power = 2, type = "regressor")
mco_reset_1 <- lm(log_glyphosate ~ log_pbs + log_sau + cereales + vignes + sq_log_pbs + sq_log_sau + sq_cereales + sq_vignes, data = data)
resettest(mco_reset_1, power = 2, type = "regressor")
coeftest(mco_reset_1, vcov = vcovHC, type = "HC1")
library("lubridate")
library("magrittr")
library("ggplot2")
library("ggpubr")
library("rticles")
library("hrbrthemes")
library("forcats")
library("ggridges")
library("cowplot")
library("ggthemes")
library("fmsb")
library("wesanderson")
library("knitr", "rmarkdown", "markdown")
library("tidyverse")
library("tidyr")
library("dplyr")
library("plotly")
library("paletteer")
library("extrafont")
library("kableExtra")
library('data.table')
library("readxl")
library("jtools")
library("ggrepel")
library("fastDummies")
library("xtable")
library("sjPlot")
library("sjmisc")
library("sjlabelled")
library("lmtest")
library("modelsummary")
library("kableExtra")
library("gt")
library("corrplot")
library("mice")
library("sandwich")
library("psych")
library("performance")
library("see")
library("patchwork")
library("stargazer")
library("car")
library("nlme")
tz <- Sys.timezone()
knitr::opts_chunk$set(echo = TRUE, fig.width=3, fig.height=2.5,fig.pos ="ht", out.width = '50%',out.extra = "",fig.align = 'center')
getOption('xtable.comment',TRUE)
knitr::opts_chunk$set(echo = FALSE) # By default, hide code; set to TRUE to see code
knitr::opts_chunk$set(fig.pos = 'p') # Places figures on their own pages
knitr::opts_chunk$set(out.width = '100%', dpi=300) # Figure resolution and size
knitr::opts_chunk$set(fig.env="figure") # Latex figure environment
setwd("~/Documents/GitHub/glyphosate")
glyphosate <- read.csv2("data/glyphosate.csv")
vignes <- read.csv2("data/vignes.csv")
cereales <- read.csv2("data/cereales.csv")
pbs <- read.csv2("data/pbs.csv")
sau <- read.csv2("data/sau.csv")
data <- inner_join(glyphosate, vignes, by = "code_departement")
data <- inner_join(data, cereales, by = "code_departement")
data <- inner_join(data, pbs, by = "code_departement")
data <- inner_join(data, sau, by = "code_departement")
datasummary_skim(data)
data <- mutate_all(data, ~ replace(., is.na(.), 0))
data <- data %>%
mutate(log_pbs = log(pbs)) %>%
mutate(log_sau = log(sau)) %>%
mutate(log_glyphosate = log(glyphosate))
data <- data[, !names(data) %in% c("annee")]
describe(data)
data_numeric <- data[sapply(data, is.numeric)]
mcor <- cor(data_numeric, use = "complete.obs")
corrplot(mcor, method = "number", type = "upper", order = "hclust",
tl.col = "black")
ggplot(data) +
aes(x = pbs, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = sau, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = cereales, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
ggplot(data) +
aes(x = vignes, y = glyphosate) +
geom_smooth(method = "lm", se = FALSE, color = 'red') +
geom_smooth(method = "lm", formula = y ~ I(x^2), se = FALSE) +
geom_point(shape = "circle", size = 1.5, colour = "#0C4C8A") +
theme_minimal()
mco1 <- lm(log_glyphosate ~ log_pbs + log_sau + cereales + vignes, data = data)
modelsummary(mco1,
estimate = c("{estimate} ({std.error}) {stars}"),
statistic = 'conf.int', conf_level = 0.95)
res1 <- residuals(mco1)
t.test(res1)
res1 <- residuals(mco1)
qqnorm(res1)
qqline(res1, col = 'red')
plot(fitted(mco1), resid(mco1),
xlab = "Valeurs ajustées", ylab = "Résidus",
main = "Résidus vs. Valeurs ajustées")
check_heteroskedasticity(mco1)
data <- data %>%
mutate(sq_log_pbs = log(pbs)^2) %>%
mutate(sq_log_sau = log(sau)^2) %>%
mutate(sq_cereales = cereales^2) %>%
mutate(sq_vignes = vignes^2)
resettest(mco1, power = 2, type = "regressor")
mco_reset_1 <- lm(log_glyphosate ~ log_pbs + log_sau + cereales + vignes + sq_log_pbs + sq_log_sau + sq_cereales + sq_vignes, data = data)
resettest(mco_reset_1, power = 2, type = "regressor")
coeftest(mco_reset_1, vcov = vcovHC, type = "HC1")
mco_reset_2 <- lm(log_glyphosate ~ log_pbs + log_sau + cereales + vignes + sq_log_sau + sq_cereales + sq_vignes, data = data)
resettest(mco_reset_2, power = 2, type = "regressor")
coeftest(mco_reset_2, vcov = vcovHC, type = "HC1")
vif(mco_reset_2)
apply(data_numeric, 2, var)
cov1 <- vcovHC(mco1, type = "HC1")
robust_se <- sqrt(diag(cov1))
stargazer(mco1, type = "text", se = list(robust_se, NULL))
check_collinearity(mco1)
check_outliers(mco1)
check_predictions(mco1)
check_singularity(mco1, vcov = vcovHC, type = "HC1")
